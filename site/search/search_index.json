{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"BPF Info A static site serving as our internal documentation for BPF and ROSA projects. MkDocs Command Reference mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#bpf-info","text":"A static site serving as our internal documentation for BPF and ROSA projects.","title":"BPF Info"},{"location":"#mkdocs-command-reference","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"MkDocs Command Reference"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"bpftool/","text":"bpftool bpftool is a program that allows a command line interface to managing the state of BPF programs in the current system.","title":"bpftool"},{"location":"bpftool/#bpftool","text":"bpftool is a program that allows a command line interface to managing the state of BPF programs in the current system.","title":"bpftool"},{"location":"bytecode/","text":"BPF Bytecode BPF bytecode is currently being standardized as part of the ietf. The current draft of the ISA can be found here","title":"BPF Bytecode"},{"location":"bytecode/#bpf-bytecode","text":"BPF bytecode is currently being standardized as part of the ietf. The current draft of the ISA can be found here","title":"BPF Bytecode"},{"location":"jit/","text":"JIT As part of BPF program loading, there is an in-kernel jit compiler that converts BPF bytecode into native executable code. Work has been done to formally verify the corectness of the BPF jit: Specification and verification in the field: Applying formal methods to BPF just-in-time compilers in the Linux kernel .","title":"BPF JIT"},{"location":"jit/#jit","text":"As part of BPF program loading, there is an in-kernel jit compiler that converts BPF bytecode into native executable code. Work has been done to formally verify the corectness of the BPF jit: Specification and verification in the field: Applying formal methods to BPF just-in-time compilers in the Linux kernel .","title":"JIT"},{"location":"libbpf/","text":"libbpf libbpf is a library that serves as a user-space loader for bpf programs.","title":"libbpf"},{"location":"libbpf/#libbpf","text":"libbpf is a library that serves as a user-space loader for bpf programs.","title":"libbpf"},{"location":"map/","text":"BPF Maps Maps are used to share data between a BPF program and a user space program. They are also used to store the internal data used by BPF programs.","title":"BPF Maps"},{"location":"map/#bpf-maps","text":"Maps are used to share data between a BPF program and a user space program. They are also used to store the internal data used by BPF programs.","title":"BPF Maps"},{"location":"program/","text":"BPF Program A BPF program is a safe kernel extension.","title":"BPF Program"},{"location":"program/#bpf-program","text":"A BPF program is a safe kernel extension.","title":"BPF Program"},{"location":"verifier/","text":"BPF Verifier When a BPF program is loaded, it is verified to be safe by an in-kernel verifier.","title":"BPF Verifier"},{"location":"verifier/#bpf-verifier","text":"When a BPF program is loaded, it is verified to be safe by an in-kernel verifier.","title":"BPF Verifier"}]}